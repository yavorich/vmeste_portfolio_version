version: "3"

services:
  backend:
    container_name: vmeste_backend
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile.dev
    entrypoint: ./docker/backend/entrypoint.dev.sh
    restart: always
    volumes:
      - .:/app
      - static:/app/backend/static/
    expose:
      - 8000
    env_file:
      - ./docker/backend/dev.env
    depends_on:
      - db
  
  db:
    container_name: vmeste_db
    image: postgres:14.5-alpine
    restart: always
    volumes:
      - ./data/db:/var/lib/postgresql/data
    env_file:
      - ./docker/backend/dev.env
    ports:
      - 5432:5432

  nginx:
    container_name: vmeste_nginx
    build: ./docker/nginx
    volumes:
      - static:/app/backend/static/
    ports:
      - 8000:80
    depends_on:
      - backend
  
  celery:
    container_name: vmeste_celery
    restart: always
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile.dev
    volumes:
      - .:/app
    env_file:
      - ./docker/backend/dev.env
    entrypoint: ./docker/backend/celery-entrypoint.sh
    depends_on:
      - backend
      - db
      - rabbit

  rabbit:
    container_name: vmeste_rabbit
    restart: always
    image: rabbitmq:3.10-management
    hostname: rabbitmq
    expose:
      - 5672
      - 15672
    env_file:
      - ./docker/backend/dev.env
    volumes:
      - .:/app
      - rabbitmqdata:/var/lib/rabbitmq
    
  elasticsearch:
    container_name: vmeste_elasticsearch
    image: elasticsearch:8.11.1
    restart: always
    volumes:
      - elsdata:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - 9200:9200


volumes:
  static:
  rabbitmqdata:
  elsdata: